#!/usr/bin/env bash
set -Eeuo pipefail

apt-mark hold "linux-image-cloud-$arch"

# set default umask to a more conservative value
sed -i 's/UMASK\t\t022/UMASK\t\t027/' /etc/login.defs
#cat <<EOF >>/etc/pam.d/common-session
# Allow umask to be changed
#session optional pam_umask.so
#EOF

DEBIAN_FRONTEND=noninteractive pam-auth-update --remove cracklib
rm -f /usr/share/pam-configs/cracklib
DEBIAN_FRONTEND=noninteractive pam-auth-update

update-kernel-cmdline

mkdir -p /boot/efi/Default

for kernel in /boot/vmlinuz-*; do
	if [[ "$arch" = "i386" ]] || [[ "$arch" = "amd64" ]]; then
		#legacy
		if [[ -f "/usr/bin/syslinux" ]]; then
			dracut\
			--force\
			--kver "${kernel#*-}"\
			--modules "bash dash systemd systemd-initrd kernel-modules kernel-modules-extra terminfo udev-rules dracut-systemd gardenlinux base fs-lib shutdown"\
			--reproducible\
			"/boot/initrd.img-${kernel#*-}"
		fi

		#uefi
		# TODO find nicer way to skip handling of initrd
		/usr/bin/kernel-install add "${kernel#*-}" "${kernel}" "zzz-skip-initrd"
		dracut\
		--force\
		--kver "${kernel#*-}"\
		--uefi\
		--modules "bash dash systemd systemd-initrd kernel-modules kernel-modules-extra terminfo udev-rules dracut-systemd gardenlinux base fs-lib shutdown"\
		--kernel-cmdline "$(cat /etc/kernel/cmdline)"\
		--reproducible\
		"/boot/efi/Default/${kernel#*-}/linux"
	elif [[ "$arch" = "arm64" ]]; then
		dracut -f /boot/initrd.img-${kernel#*-} ${kernel#*-} -m "bash dash systemd systemd-initrd kernel-modules kernel-modules-extra terminfo udev-rules dracut-systemd gardenlinux base fs-lib shutdown" --reproducible
		/usr/bin/kernel-install add "${kernel#*-}" "${kernel}" "/boot/initrd.img-${kernel#*-}"
	else
		echo "unsupported architecture $arch"
		exit 1
	fi
done

rm -f /etc/dracut.conf.d/30-secureboot.conf

# fix path for the loader
# needed because /boot/efi is not a mountpoint at this point
sed 's/boot\/efi\///' -i /boot/efi/loader/entries/*.conf

if [[ "$arch" = "i386" ]] || [[ "$arch" = "amd64" ]]; then
	# bootloader
	if [[ -f "/usr/bin/syslinux" ]]; then
		mkdir -p /boot/efi/syslinux
		cp /usr/lib/syslinux/modules/bios/menu.c32 /boot/efi/syslinux/
		cp /usr/lib/syslinux/modules/bios/libutil.c32 /boot/efi/syslinux/

		update-syslinux
	fi

	# sign bootloader
	sbsign --cert /etc/gl-sign.crt --key /etc/gl-sign.key --output /usr/lib/systemd/boot/efi/systemd-bootx64.efi /usr/lib/systemd/boot/efi/systemd-bootx64.efi
	# prepare cert for later loading
	openssl x509 -outform der -in /etc/gl-sign.crt -out /boot/efi/gardenlinux.der
fi
