#!/usr/bin/env bash
set -euo pipefail

thisDir="$(readlink -f "$(pwd)")"
scriptDir="$(dirname "$(readlink -f "$BASH_SOURCE")")"
src=$(basename $0)
srcDir=$scriptDir/${src}.d

if [ "$thisDir" == "$scriptDir" ]; then
	echo "ERROR: current directory $thisDir and script directory $scriptDir are identical"
	echo "ERROR: all files would be sourced here. Maybe: cd ..; $(basename $(realpath -e .))/$src"
	exit 1
fi

move_package () {
	local path="$1"; shift
	local donotmove="$@"
	local targetpath=${sourcepath:-"$(apt-cache showsrc $src | grep "^Directory" | cut -d: -f2- | cut -d'/' -f2- | head -n1)"}
	echo "moving to $BUILDTARGET/$targetpath"
	sudo mkdir --parent $BUILDTARGET/$targetpath
	sudo mv -v $(find .. -maxdepth 1 -type f,l -not -path '*/\.*' $(printf "! -name %s " $donotmove)) $BUILDTARGET/$targetpath;
}

install_build_deps () {
	local control_file="$PWD/debian/control"
	pushd "$(mktemp -d)"
	if [ "$ARCH" = "$(dpkg --print-architecture)" ]; then
		mk-build-deps --install --root-cmd "sudo" --tool "apt-get -y" "$control_file"
	else
		mk-build-deps -A --install --root-cmd "sudo" --tool "apt-get -y" "$control_file"
		DEB_BUILD_PROFILES="cross ${DEB_BUILD_PROFILES:-}" mk-build-deps -B --host-arch $ARCH --install --root-cmd "sudo" --tool "apt-get -y" "$control_file"
	fi
	popd
}

build () {
	if [ "$ARCH" = "$(dpkg --print-architecture)" ]; then
		debuild
	else
		DEB_BUILD_OPTIONS="nocheck nopgo nodoc ${DEB_BUILD_OPTIONS:-}" DEB_BUILD_PROFILES="cross ${DEB_BUILD_PROFILES:-}" debuild -B -a$ARCH
	fi
}

link_version () {
	cat debian/control | grep '^Package:' | cut -d ' ' -f 2 | \
	while read pkg; do
		find .. -name "$pkg"'_*.deb' -maxdepth 1 | \
		while read file; do
			suffix=$(grep -o '_[a-z0-9]\+\.deb$' <<< "$file")
			ln -sr "$file" "../$pkg$suffix"
		done
	done
}
