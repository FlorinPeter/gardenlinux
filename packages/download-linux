#!/usr/bin/env bash
set -euo pipefail


print_help() {
	echo "required:"
	echo "-o, --output FOLDER		destination folder to place the downloaded files"
	echo "-v, --version FILE		path to VERSIONS file which is controlling which versions to download"
	echo "-b, --base-dir FOLDER		path to linux.d folder containing gpgkeys and .kernel_helper script"
	echo "optional:"
	echo "-h, --help			show brief help"
	echo "-d, --debug			debug mode of this script"
}

while test $# -gt 0; do
  case "$1" in
	-h|--help)
		print_help
		exit 0
	;;
	-d|--debug)
		shift
      		debug=1
	;;
	-o|--output)
		outputDir=$(realpath $2)
		echo "set outputDir=${outputDir} "
 		shift; shift
	;;
	-b|--base-dir)
		baseDir=$(realpath $2)
		echo "set baseDir=${baseDir} "
 		shift; shift
	;;
	-v|--version)
		versionFile=$(realpath $2)
		echo "set versionFile=${versionFile} "
 		shift; shift
	;;
    *) print_help
      break
      ;;
  esac
done


if [ -z ${outputDir+x} ]; then echo "outputDir is not set!"; print_help; return 1;fi
if [ -z ${versionFile+x} ]; then echo "versionFile is not set!"; print_help; return 1;fi
if [ -z ${baseDir+x} ]; then echo "baseDir is not set!"; print_help; return 1;fi
if [ ! -d ${outputDir} ]; then echo "Directory '$outputDir' does not exist! Please create it manually"; exit 1; fi
if [ ! -d ${baseDir} ]; then echo "Directory '$baseDir' does not exist! Please create it manually"; exit 1; fi

if [ ! -f ${versionFile} ]; then echo "File '$versionFile' does not exist!"; exit 1; fi



if [ ${debug:-} ]; then
	set -x
fi

. ${versionFile}
. "${baseDir}/.kernel-helper"

if [ -z ${KERNEL_VERSION+x} ]; then echo "KERNEL_VERSION is not set!"; print_help; return 1;fi

outputDir="${outputDir}/${KERNEL_VERSION}"
mkdir -p "${outputDir}"

import_gpg_keys "${baseDir}"

get_kernel_sources "${outputDir}"

get_debian_release_env "${outputDir}"

get_old_kernel "${outputDir}"

get_ufs5_from_upstream "${outputDir}"

get_linux_stable_for_comments "${outputDir}"

